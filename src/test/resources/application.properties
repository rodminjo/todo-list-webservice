spring.jpa.show-sql=true
logging.level.org.hibernate.sql=debug
spring.jpa.properties.hibernamte.format_sql=true
spring.jpa.hibernate.generate-ddl=true
spring.jpa.properties.hibernate.default_batch_fetch_size = 1000
spring.jpa.hibernate.database=mysql
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


# drop and create table when you start server
spring.jpa.hibernate.ddl-auto=update
# sql query log h2 -> mysql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# h2 console access
spring.h2.console.enabled=true
# session storage change tomcat to jdbc
spring.session.store-type=jdbc

#to spring security test id or client-secret.. set test

spring.security.oauth2.client.registration.google.client-id=test
spring.security.oauth2.client.registration.google.client-secret=test
spring.security.oauth2.client.registration.google.scope=profile,email

# registration
spring.security.oauth2.client.registration.naver.client-id=test
spring.security.oauth2.client.registration.naver.client-secret=test
spring.security.oauth2.client.registration.naver.redirect-uri=test
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# naver primarykey is response
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# live streaming code
spring.devtools.livereload.enabled=true
spring.devtools.remote.restart.enabled=false
spring.freemarker.cache = false
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/